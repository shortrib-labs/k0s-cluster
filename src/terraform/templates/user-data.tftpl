#cloud-config

# This is the user-data configuration file for cloud-init. By default this sets
# up an initial user called "ubuntu" with password "ubuntu", which must be
# changed at first login. However, many additional actions can be initiated on
# first boot from this file. The cloud-init documentation has more details:
#
# https://cloudinit.readthedocs.io/
#
# Some additional examples are provided in comments below the default
# configuration.

prefer_fqdn_over_hostname: true

ssh_authorized_keys: 
${ssh_authorized_keys}

chpasswd:
  expire: false

packages:
- open-vm-tools
- ca-certificates
- wireguard
- curl
- zsh
- neovim
- jq

groups:
- ssher

users: 
${users}

# Update apt database and upgrade packages on first boot
package_update: true
package_upgrade: true

ca_certs:
# CN=Shortrib Labs Root E1
- |
  -----BEGIN CERTIFICATE-----
  MIIBpDCCAUqgAwIBAgIQMrjGbvdzyD63/WrEiob28DAKBggqhkjOPQQDAjAgMR4w
  HAYDVQQDExVTaG9ydHJpYiBMYWJzIFJvb3QgRTEwHhcNMjIwNTA2MDEwNzUwWhcN
  MzIwNTAzMDEwNzUwWjAgMR4wHAYDVQQDExVTaG9ydHJpYiBMYWJzIFJvb3QgRTEw
  WTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAASH3xjMX2xsnDZ7G0dxuVunoH7ZT4qO
  yNwQfYvMI/ZiuvNV8KyYLqrcD4cigiuVWmjvSAqT5TOkIcD8s10iWZSKo2YwZDAO
  BgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBATAdBgNVHQ4EFgQU6qmj
  Isxj08Ks5oM4jNfNu/0QxhcwHwYDVR0jBBgwFoAU6qmjIsxj08Ks5oM4jNfNu/0Q
  xhcwCgYIKoZIzj0EAwIDSAAwRQIgCs9bM8Ax8RnPuHZWrgZodf/vJ6dce7OFeOZr
  mdHeKP8CIQC/KLNuScd9FfpazDzAZYYPHR9vnDWCkYsJ+2NaiKdOew==
  -----END CERTIFICATE-----
# CN=Shortrib Labs Root R2
- |
  -----BEGIN CERTIFICATE-----
  MIIFDzCCAvegAwIBAgIQZUk6BivvZNk/u0uKj2lxJTANBgkqhkiG9w0BAQsFADAg
  MR4wHAYDVQQDExVTaG9ydHJpYiBMYWJzIFJvb3QgUjIwHhcNMjMwNDI1MTk0OTEw
  WhcNMzMwNDIyMTk0OTEwWjAgMR4wHAYDVQQDExVTaG9ydHJpYiBMYWJzIFJvb3Qg
  UjIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC40NpmZ3L8CcPnnP6w
  G47D/OqmV23QW/q6HppSAPMocuojCoP8Go+4g1Am38fjfbe5AQnSQcrN7xthaRCb
  nO5BERR0p3rPUbupbb+AMqzlBFpuGaFMSeXwWF5qrb8gG6XNineLWaDpwwrpOaNt
  fLyJw4VIHAsNEs3qkA5/ctv9eDUNmtq/e6jpy0vZSRDcEp0PMima9oE6evaaddj0
  TXdQRmiVeABCMO0m8h7dVEQmDGZq7P1lIMS7ZZHx+/w8tFzDRSeQoy1DzQrh7XMu
  cN3BpeM/05hUvGUSChD2keXy8FdjI+zhuSRTRHvRkOBDqvVZ4R4wv7MqWhgfzzzH
  zkl5oA40zGehctKLhUXnHcZaHmkUyPkSrqHC0vW/cPsrEou/q36gw2rvuInfC3/F
  G0pKKATISr7nMQ1JxWNb8tCh2sj38RaVKYyj2p9iayAxudb8mO1O1ThQdhsJd3mY
  4FEGwRLFXyty+Kgyt7Orb0yZazdH7C5wjIYU98OGk9kFjGr+uveblJapIa1C1g+f
  JU0nA1PAix13Sxi8jk9Nj4hV1gYmWKRLtzkk4229SR/7HNh9C3kOpdJyuCgVQiPu
  Gtk1jECice23HQ/BQNw7DSwFErek+75NcpIak1nmJ2BCc2JCx6YBrq8C3XYg+++l
  duzcOKPp6uk+GK6UvBVwhxUblwIDAQABo0UwQzAOBgNVHQ8BAf8EBAMCAQYwEgYD
  VR0TAQH/BAgwBgEB/wIBATAdBgNVHQ4EFgQU/Q7uclwplHgnbFpZDoGzPkGL8XIw
  DQYJKoZIhvcNAQELBQADggIBACHHjD7PTeKRjO7kPY2Gij9Mvm1cEz1NP18Bfc/P
  9aAqv6iPQc1JmJgakZY2HU+BSoIMZVLa2vogqWy/o5OIRUGNy86Iws/05Ub7y0U9
  fALFLwExWXaYYw0j3UJOk//zDDfybqvHMQEgGQuG3c7Nx1lM3P0pbMThivOzqjO8
  DBN01nhuhIHfdXNoW5bGG2HJ2YfYXhkfYV9kC3+hg4S9Bdo+lz+l+7WdThkqdPBT
  /HsTV8Op3KNJ5POzleJr1SIdOIg1UJp8gxYAkiCzNcGecM8PrhMVaCCfrD2/4z5V
  oa3xDmY8aqP92bTr5p4M86LZ7eEqBKEYWkJQe6/NZaiWHoNj1p+q36i98Mtr79iK
  RL2O/jaxmgh974tdPn9R82RKtylnsQiJzeT3Cc+vl10jq2Ne7aNCD6e1YWWXbloK
  tAGVJ+GnBMVVJTZRV2TRDB58+SrxnzeeY3JtXHSMGxw2WC6ijx0NwfnsV4IMfPZ1
  827F0FULk3vw1zHTE3q0zq+HTzWE6/MwVHgxLpJQF/LWzG8wYCg+CS4dyPXW0qX1
  3sLOOGhLKlSle8MsRgjSbrCiinxFPVu93iF8Kj60oAjtSh2g+fcsFCHqYawyM9e5
  6j7IvnxgE55Ps8n0blQW91bP0J1D9FAyb4ULUmt9N0/o36m8SpKLBAYE3HSX6ctG
  5lsk
  -----END CERTIFICATE-----

write_files:
- path: /etc/sysctl.d/75-kubelet.conf
  content: |
    # parameters that Kubelet expects and need to be set out of band for CIS compliance
    kernel.keys.root_maxbytes=25000000
    kernel.keys.root_maxkeys=1000000
    kernel.panic=10
    kernel.panic_on_oops=1
    vm.overcommit_memory=1
    vm.panic_on_oom=0
- path: /etc/netplan/80-workload-interface.yaml
  content: |
    # enable second interface on additional VLAN
    network:
      ethernets:
        ens224:
          dhcp4: true
      version: 2
- path: /etc/ssh/sshd_config.d/01-hardening.conf
  content: |
    # enable eed25519 key
    HostKey /etc/ssh/ssh_host_ed25519_key
    # restrict supported key exchange, cipher, and MAC algorithms
    KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha256
    Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
    MACs hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,umac-128-etm@openssh.com
    HostKeyAlgorithms ssh-ed25519,ssh-ed25519-cert-v01@openssh.com,sk-ssh-ed25519@openssh.com,sk-ssh-ed25519-cert-v01@openssh.com,rsa-sha2-256,rsa-sha2-512,rsa-sha2-256-cert-v01@openssh.com,rsa-sha2-512-cert-v01@openssh.com
    # restrict authentication mechanism
    PasswordAuthentication yes
    ChallengeResponseAuthentication no
    PubkeyAuthentication yes
  permissions: '0644'
  owner: root:root
  #
- path: /etc/ssh/ssh_config.d/01-hardening.conf
  content: |
    Host github.com
      KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256
    Host *
      # restrict supported key exchange, cipher, and MAC algorithms
      KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha256
      Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
      MACs hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,umac-128-etm@openssh.com
      HostKeyAlgorithms ssh-ed25519,ssh-ed25519-cert-v01@openssh.com,sk-ssh-ed25519@openssh.com,sk-ssh-ed25519-cert-v01@openssh.com,rsa-sha2-256,rsa-sha2-512,rsa-sha2-256-cert-v01@openssh.com,rsa-sha2-512-cert-v01@openssh.com
      # restrict authentication mechanism
      PasswordAuthentication no
      ChallengeResponseAuthentication no
      PubkeyAuthentication yes
  permissions: '0644'
  owner: root:root

### Run arbitrary commands at rc.local like time
runcmd:
- [ chsh, -s, /usr/bin/zsh, crdant ]
- echo "# limit who can use SSH\nAllowGroups ssher" > /etc/ssh/sshd_config.d/02-limit-to-ssher.conf
- netplan apply
