apiVersion: k0sctl.k0sproject.io/v1beta1
kind: Cluster
metadata:
  name: ${cluster_name}
spec:
  hosts:
  %{ for controller in controllers }
  - ssh:
      address: ${controller}
      user: ${user}
    role: controller+worker
    %{ if controller == first_controller }
    files:
    - name: vsphere-csi
      src: ${manifest_dir}/vsphere-csi/*.yaml
      dstDir: /var/lib/k0s/manifests/vsphere-csi
      perm: 0600
      dirPerm: 0755
    - name: vsphere-csi-conf.yaml
      src: ${work_dir}/manifests/01-vsphere-csi-config.yaml
      dstDir: /var/lib/k0s/manifests/vsphere-csi
      perm: 0600
      dirPerm: 0755
    - name: default-ipaddresspool.yaml
      src: ${work_dir}/manifests/00-default-ipaddresspool.yaml
      dstDir: /var/lib/k0s/manifests/metallb-config
      perm: 0600
      dirPerm: 0755
    - name: metallb-config
      src: ${manifest_dir}/metallb-config/*.yaml
      dstDir: /var/lib/k0s/manifests/metallb-config
      perm: 0600
    - name: cert-manager
      src: ${manifest_dir}/cert-manager/*.yaml
      dstDir: /var/lib/k0s/manifests/cert-manager
      perm: 0600
      dirPerm: 0755
    - name: cloudflare-api-token.yaml
      src: ${work_dir}/manifests/01-cloudflare-api-token.yaml
      dstDir: /var/lib/k0s/manifests/cloudflare
      perm: 0600
    - name: acme
      src: ${manifest_dir}/acme/*
      dstDir: /var/lib/k0s/manifests/acme
      perm: 0600
    - name: tailscaled
      src: ${manifest_dir}/tailscaled/*.yaml
      dstDir: /var/lib/k0s/manifests/tailscaled
      perm: 0600
    - name: tailscale-authkey.yaml
      src: ${work_dir}/manifests/01-tailscale-authkey.yaml
      dstDir: /var/lib/k0s/manifests/tailscaled
      perm: 0600
    - name: tailscale-proxy.yaml
      src: ${work_dir}/manifests/02-tailscale-proxy.yaml
      dstDir: /var/lib/k0s/manifests/tailscaled
      perm: 0600
    %{ if enable_gvisor }
    - name: gvisor.yaml
      src: ${manifest_dir}/runtimes/gvisor.yaml
      dstDir: /var/lib/k0s/manifests/runtimes
      perm: 0600
    %{ endif }
    %{ if enable_wasm }
    - name: wasmtime-spin.yaml
      src: ${manifest_dir}/runtimes/wasmtime-spin.yaml
      dstDir: /var/lib/k0s/manifests/runtimes
      perm: 0600
    %{ endif }
    %{ endif }
  %{ endfor }
  %{ for worker in workers }
  - ssh:
      address: ${worker}
      user: ${user}
    role: worker
  %{ endfor }
  k0s:
    version: 1.31.2+k0s.0
    dynamicConfig: false
    config:
      apiVersion: k0s.k0sproject.io/v1beta1
      kind: Cluster
      metadata:
        name: k0s
      spec:
        api:
          externalAddress: ${cluster_fqdn}
          k0sApiPort: 9443
          port: 6443
        installConfig:
          users:
            etcdUser: etcd
            kineUser: kube-apiserver
            konnectivityUser: konnectivity-server
            kubeAPIserverUser: kube-apiserver
            kubeSchedulerUser: kube-scheduler
        konnectivity:
          adminPort: 8133
          agentPort: 8132
        network:
          kubeProxy:
            disabled: false
            mode: iptables
          calico:
            overlay: CrossSubnet
            wireguard: true
          podCIDR: 10.244.0.0/16
          provider: calico
          serviceCIDR: 10.96.0.0/12
        podSecurityPolicy:
          defaultPolicy: 00-k0s-privileged
        storage:
          type: etcd
        telemetry:
          enabled: false
        extensions:
          helm:
            repositories:
            - name: metallb
              url: https://metallb.github.io/metallb
            - name: bitnami
              url: https://charts.bitnami.com/bitnami
            - name: jetstack
              url: https://charts.jetstack.io
            - name: chaos-mesh
              url: https://charts.chaos-mesh.org
            charts:
            - name: metallb
              chartname: metallb/metallb
              namespace: metallb
            - name: projectcontour
              chartname: bitnami/contour
              namespace: projectcontour
            - name: chaos-mesh
              chartname: chaos-mesh/chaos-mesh
              namespace: chaos-mesh
              values: |
                chaosDaemon:
                  # runtime specifies which container runtime to use. Currently
                  # we only supports docker, containerd and CRI-O.
                  runtime: containerd
                  # socketPath specifies the path of container runtime socket on the host.
                  socketPath: /var/run/k0s/containerd.sock

                dashboard:
                  # Enable chaos-dashboard
                  create: true
                  # rootUrl specify the base url for openid/oauth2 (like GCP Auth Integration) callback URL.
                  rootUrl: https://chaos.shortrib.dev:2333
                  ingress:
                    ## Set to true to enable ingress record generation
                    enabled: true

                    ## Set this to true in order to add the corresponding annotations for cert-manager
                    certManager: true

                    ## Ingress annotations done as key:value pairs
                    ## For a full list of possible ingress annotations, please see
                    ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
                    ##
                    ## If tls is set to true, annotation ingress.kubernetes.io/secure-backends: "true" will automatically be set
                    ## If certManager is set to true, annotation kubernetes.io/tls-acme: "true" will automatically be set
                    annotations:
                      kubernetes.io/tls-acme: "true"
                      ingress.kubernetes.io/force-ssl-redirect: "true"
                      cert-manager.io/cluster-issuer: letsencrypt-clusterissuer

                    ## The list of hostnames to be covered with this ingress record.
                    ## Most likely this will be just one host, but in the event more hosts are needed, this is an array
                    hosts:
                      - name: chaos.shortrib.dev

                        ## Set this to true in order to enable TLS on the ingress record
                        tls: true

                        ## Optionally specify the TLS hosts for the ingress record
                        ## Useful when the Ingress controller supports www-redirection
                        ## If not specified, the above host name will be used
                        # tlsHosts:
                        # - www.dashboard.local
                        # - dashboard.local

                        ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
                        tlsSecret: chaos.shortrib.dev-tls


