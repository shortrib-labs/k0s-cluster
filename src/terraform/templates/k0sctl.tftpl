apiVersion: k0sctl.k0sproject.io/v1beta1
kind: Cluster
metadata:
  name: ${cluster_name}
spec:
  hosts:
  %{ for controller in controllers }
  - ssh:
      address: ${controller}
      user: ${user}
    role: controller+worker
    %{ if controller == first_controller }
    files:
    - name: vsphere-csi
      src: ${manifest_dir}/vsphere-csi/*.yaml
      dstDir: /var/lib/k0s/manifests/vsphere-csi
      perm: 0600
      dirPerm: 0775
      group: adm
    - name: vsphere-csi-conf.yaml
      src: ${work_dir}/manifests/01-vsphere-csi-config.yaml
      dstDir: /var/lib/k0s/manifests/vsphere-csi
      perm: 0600
      dirPerm: 0775
      group: adm
    - name: default-ipaddresspool.yaml
      src: ${work_dir}/manifests/00-default-ipaddresspool.yaml
      dstDir: /var/lib/k0s/manifests/metallb-config
      perm: 0600
      dirPerm: 0775
      group: adm
    - name: metallb-config
      src: ${manifest_dir}/metallb-config/*.yaml
      dstDir: /var/lib/k0s/manifests/metallb-config
      perm: 0600
      dirPerm: 0775
      group: adm
    - name: cert-manager
      src: ${manifest_dir}/cert-manager/*.yaml
      dstDir: /var/lib/k0s/manifests/cert-manager
      perm: 0600
      dirPerm: 0755
      group: adm
    - name: cloudflare-api-token.yaml
      src: ${work_dir}/manifests/01-cloudflare-api-token.yaml
      dstDir: /var/lib/k0s/manifests/cloudflare
      perm: 0600
      dirPerm: 0775
      group: adm
    - name: acme
      src: ${manifest_dir}/acme/*
      dstDir: /var/lib/k0s/manifests/acme
      perm: 0600
      dirPerm: 0775
      group: adm
    %{ if enable_gvisor }
    - name: gvisor.yaml
      src: ${manifest_dir}/runtimes/gvisor.yaml
      dstDir: /var/lib/k0s/manifests/runtimes
      perm: 0600
      dirPerm: 0775
      group: adm
    %{ endif }
    %{ if enable_wasm }
    - name: wasmtime-spin.yaml
      src: ${manifest_dir}/runtimes/wasmtime-spin.yaml
      dstDir: /var/lib/k0s/manifests/runtimes
      perm: 0600
      dirPerm: 0775
      group: adm
    %{ endif }
    %{ endif }
  %{ endfor }
  %{ for worker in workers }
  - ssh:
      address: ${worker}
      user: ${user}
    role: worker
  %{ endfor }
  k0s:
    version: 1.33.1+k0s.1
    dynamicConfig: false
    config:
      apiVersion: k0s.k0sproject.io/v1beta1
      kind: Cluster
      metadata:
        name: k0s
      spec:
        api:
          externalAddress: ${cluster_fqdn}
          k0sApiPort: 9443
          port: 6443
        installConfig:
          users:
            etcdUser: etcd
            kineUser: kube-apiserver
            konnectivityUser: konnectivity-server
            kubeAPIserverUser: kube-apiserver
            kubeSchedulerUser: kube-scheduler
        konnectivity:
          adminPort: 8133
          agentPort: 8132
        network:
          kubeProxy:
            disabled: false
            mode: iptables
          calico:
            overlay: CrossSubnet
            wireguard: true
          podCIDR: 10.244.0.0/16
          provider: calico
          serviceCIDR: 10.96.0.0/12
        podSecurityPolicy:
          defaultPolicy: 00-k0s-privileged
        storage:
          type: etcd
        telemetry:
          enabled: false
        extensions:
          helm:
            repositories:
            - name: metallb
              url: https://metallb.github.io/metallb
            - name: tailscale
              url: https://pkgs.tailscale.com/helmcharts
            charts:
            - name: metallb
              chartname: oci://registry-1.docker.io/bitnamicharts/metallb
              namespace: metallb
              order: 0
            - name: tailscale-operator
              chartname: tailscale/tailscale-operator
              namespace: tailscale
              values: |
                operatorConfig:
                  hostname: ${cluster_name}-operator
                oauth:
                  clientId: ${tailscale_client_id}
                  clientSecret: ${tailscale_client_secret}
                apiServerProxyConfig:
                  mode: "true"
              order: 10
            - name: projectcontour
              chartname: oci://registry-1.docker.io/bitnamicharts/contour
              namespace: projectcontour
              version: 17.0.1
              values: ""
            - name: kube-prometheus
              chartname: oci://registry-1.docker.io/bitnamicharts/kube-prometheus
              namespace: monitoring
              version: 9.0.0
              values: |
                prometheus:
                  externalUrl: https://prometheus.${cluster_fqdn} 
                  persistence:
                    enabled: true
                  ingress: 
                    enabled: true
                    tls: true
                    hostname: prometheus.${cluster_fqdn}
                    annotations:
                      kubernetes.io/tls-acme: "true"
                      ingress.kubernetes.io/force-ssl-redirect: "true"
                      cert-manager.io/cluster-issuer: shortrib-clusterissuer
                alertmanager:
                  ingress: 
                    enabled: true
                    tls: true
                    hostname: alerts.${cluster_fqdn}
                    annotations:
                      kubernetes.io/tls-acme: "true"
                      ingress.kubernetes.io/force-ssl-redirect: "true"
                      cert-manager.io/cluster-issuer: shortrib-clusterissuer
            - name: grafana-operator
              chartname: oci://registry-1.docker.io/bitnamicharts/grafana-operator
              namespace: monitoring
              version: 4.0.0
              values: |
                operator:
                  networkPolicy:
                    extraEgress:
                      - port: 9090
                        protocol: TCP
                grafana:
                  persistence:
                    enabled: true
                  ingress: 
                    enabled: true
                    tls: true
                    host: grafana.${cluster_fqdn}
                    annotations:
                      kubernetes.io/tls-acme: "true"
                      ingress.kubernetes.io/force-ssl-redirect: "true"
                      cert-manager.io/cluster-issuer: shortrib-clusterissuer
